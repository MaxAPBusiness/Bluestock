Aplicación Gestión Duraam:
La aplicación permite una gestión de las distintas bases de datos del programa.
Permite ver, insertar, editar y eliminar los datos en las bases de datos de forma
fácil y accesible para cualquiera.

Estructura de la aplicación:
La aplicación esta conformada por muchos archivos pequeños que son ensamblados por
el archivo principal main.py. Se estructura de la siguiente forma:

Duraam: la carpeta en la que están todos los archivos
    |-> .vscode: es una carpeta que VSCode crea automáticamente. Ignorar.
    |    |-> launch.json: archivo de configuración que vs usa para el programa. Ignorar.
    |-> duraam: contiene todo el código fuente y recursos necesarios para la app.
    |    |-> __pycache__: carpeta de caché que Python crea automáticamente. Ignorar.
    |    |-> db: contiene la base de datos y todos los archivos relacionados con ésta.
    |    |    |-> db.py: el archivo python que crea la base de datos.
    |    |    |-> duraam.sql: los comandos sql que crean la base de datos, que usa el archivo db.py.
    |    |    |-> duraam.sqlite3: la base de datos.
    |    |-> docs: contiene los documentos del programa.
    |    |    |-> gestion.txt: la explicación de la aplicación, el archivo que están leyendo en este momento.
    |    |-> images: las imágenes que se van a usar en la aplicación.
    |    |    |-> bitmap.png: el logo de la aplicación. Después le cambio el nombre para que se entienda mejor.
    |    |    |-> buscar.png: el logo de búsqueda.
    |    |    |-> editar.png: el logo de editar (el lapicito).
    |    |    |-> eliminar.png: el logo de eliminar (la cruz).
    |    |-> ingreso: la aplicación para ingresar al pañol. No está terminada aún. Ignorar por ahora.
    |    |-> styles: las hojas de estilo para la aplicación.
    |    |    |-> cabecera.qss: el estilo para la cabecera.
    |    |    |-> gestion.qss: el estilo para todas las gestiones.
    |    |    |-> menu_izquierdo.qss: el estilo para el menú izquierdo.
    |    |-> ui: acá están todas las pantallas y elementos de la ui importantes.
    |    |    |-> cabecera.py: la cabecera.
    |    |    |-> gestion_herramientas.py: la gestión de herramientas.
    |    |    |-> menu_izquierdo.py: el menú izquierdo.
    |    |-> main.py: el archivo main de la aplicación. Ensambla el código y ejecuta la app.
    |    |-> mostrar_mensaje.py: muestra un mensaje en la pantalla.
    |->-gitignore: archivo de git. Ignorar.
    |-> readme.txt: el archivo readme de la aplicación. Leanlo.
    |-> setup.py: el archivo que instala el programa. Por ahora está vacio. Ignorar.

En detalle:
main.py: es el archivo principal, que ensambla todo el código y lo ejecuta. 
Lo que hace, en detalle, lo siguiente:
1. Crea la base de datos (si no estaba creada antes) con la función crearBBDD de db.py.
2. Crea la ventana principal del programa:
    2.1: Crea tres secciones dentro de la ventana: 
    2.1.1: la cabecera, que importa de cabecera.py.
    2.1.2: el menú izquierdo, que permite navegar por las gestiones de la pantalla principal.
           de menu_izquierdo.py
    2.1.3: la pantalla principal, que contiene todas las gestiones. Para hacerla, importa todas
           las gestiones de la ui.
3. Importa y establece los estilos de la gestion.
4. Ejecuta la ventana.

db.py: Crea la base de datos y ejecuta los comandos de duraam.sql para crear las tablas.
duraam.sql: crea las tablas de:
    1. Alumnos.
    2. Herramientas.
    3. Profesores.
    4. Turno_panol (Turno del pañol).
    5. Mov_herramienta (movimientos de entrada y salida de las herramientas del pañol).
    6. Usuarios.

cabecera.py: crea una cabecera con el logo y el nombre de la app.

menu_izquierdo.py: crea el menú izquierdo, que permite navegar por la pantalla principal.
                   Contiene una serie de botones que representan a cada gestión disponible.

gestion_herramientas.py: la gestión de herramientas. Contiene una tabla, que muestra 
                         la tabla de la base de datos; una barra de buscador; botones para 
                         ordenar alfabéticamente la tabla por nombre, grupo y subgrupo de 
                         herramientas; botones para editar y eliminar los datos; un botón
                         para agregar herramientas. 
                         Para editar y agregar, aparece un submenú con los datos a introducir.

mostrar_mensaje.py: muestra un mensaje en la pantalla. Puede ser de información, aviso, error o pregunta.

